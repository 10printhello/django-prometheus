dist: xenial
language: python
python:
  - "3.5"
  - "3.6"
  - "3.7"
  - "3.8"
  - "2.7"
env:
  - DJANGO_VERSION=2.1
  - DJANGO_VERSION=2.2
  - DJANGO_VERSION=1.11
services:
  - memcached
  - redis
  - mysql
  - postgresql
matrix:
  exclude:
    - python: "2.7"
      env: DJANGO_VERSION=2.1
    - python: "2.7"
      env: DJANGO_VERSION=2.2
    - python: "3.8"
      env: DJANGO_VERSION=1.11
    - python: "3.7"
      env: DJANGO_VERSION=1.11
    - python: "3.6"
      env: DJANGO_VERSION=1.11

install:
  - pip install coveralls codacy-coverage
  - pip install -r requirements.txt
  - pip install -q Django==$DJANGO_VERSION
  - pip install --upgrade setuptools wheel
  - mysql -e 'create database django_prometheus_1;'
script:
  - if [[ $TRAVIS_PYTHON_VERSION == "3.7" ]]; then black --check django_prometheus/; fi
  - flake8 django_prometheus
  - isort -rc django_prometheus/ 
  - coverage run --source=django_prometheus setup.py test
  - pushd  django_prometheus/tests/end2end && PYTHONPATH=../../.. coverage run --source=django_prometheus manage.py test &&  popd
  - python setup.py sdist bdist_wheel
after_success:
  - coverage combine .coverage django_prometheus/tests/end2end/.coverage
  - coveralls
  - coverage xml
  - python-codacy-coverage -r coverage.xml
before_deploy:
  - git checkout $TRAVIS_BRANCH
  - git fetch --unshallow
  - python update_version_from_git.py
deploy:
  - provider: pypi
    distributions: sdist bdist_wheel
    skip_cleanup: true
    skip_existing: true
    user: __token__
    on:
      branch:
      - master
